[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\fecc1\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\fecc1\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.10.7 (Amazon.com Inc. Java 17.0.13)
[debug] Load.defaultLoad until apply took 210.732199ms
[debug]                 Load.loadUnit: plugins took 102.8124ms
[debug]                 Load.loadUnit: defsScala took 0.2344ms
[debug] [Loading] Scanning directory C:\DevProjects\Scala\moscow-fintech-project\project\project
[debug]                   Load.loadUnit: mkEval took 6.294001ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\DevProjects\Scala\moscow-fintech-project\project\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 13.257299 ms
[info] loading settings for project moscow-fintech-project-build-build from metals.sbt...
[debug]                     Load.resolveProject(moscow-fintech-project-build-build) took 38.1271ms
[debug]                   Load.loadTransitive: finalizeProject(Project(id moscow-fintech-project-build-build, base: C:\DevProjects\Scala\moscow-fintech-project\project\project, plugins: List(<none>))) took 68.435199ms
[debug] [Loading] Done in C:\DevProjects\Scala\moscow-fintech-project\project\project, returning: (moscow-fintech-project-build-build)
[debug]                 Load.loadUnit: loadedProjectsRaw took 344.8429ms
[debug]                 Load.loadUnit: cleanEvalClasses took 9.255301ms
[debug]               Load.loadUnit(file:/C:/DevProjects/Scala/moscow-fintech-project/project/project/, ...) took 462.013699ms
[debug]             Load.apply: load took 589.4778ms
[debug]             Load.apply: resolveProjects took 5.1008ms
[debug]             Load.apply: finalTransforms took 46.588ms
[debug]             Load.apply: config.delegates took 6.2902ms
[debug]             Load.apply: Def.make(settings)... took 487.5647ms
[debug]             Load.apply: structureIndex took 130.8284ms
[debug]             Load.apply: mkStreams took 4.4905ms
[info] loading project definition from C:\DevProjects\Scala\moscow-fintech-project\project\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Canceling execution...
[error] Cancelled: loadp
[error] Cancelled: loadp
[error] Use 'last' for the full log.
[debug] > Exec(loadFailed, None, None)
[warn] Project loading failed: (r)etry, (q)uit, (l)ast, or (i)gnore? (default: r)
