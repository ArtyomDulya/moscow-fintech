[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\fecc1\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\fecc1\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.10.7 (Amazon.com Inc. Java 17.0.13)
[debug] Load.defaultLoad until apply took 223.8441ms
[debug]                 Load.loadUnit: plugins took 81.7816ms
[debug]                 Load.loadUnit: defsScala took 0.2428ms
[debug] [Loading] Scanning directory C:\DevProjects\Scala\moscow-fintech-project\project\project
[debug]                   Load.loadUnit: mkEval took 5.7179ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\DevProjects\Scala\moscow-fintech-project\project\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 13.2773 ms
[info] loading settings for project moscow-fintech-project-build-build from metals.sbt...
[debug]                     Load.resolveProject(moscow-fintech-project-build-build) took 36.6937ms
[debug]                   Load.loadTransitive: finalizeProject(Project(id moscow-fintech-project-build-build, base: C:\DevProjects\Scala\moscow-fintech-project\project\project, plugins: List(<none>))) took 65.5778ms
[debug] [Loading] Done in C:\DevProjects\Scala\moscow-fintech-project\project\project, returning: (moscow-fintech-project-build-build)
[debug]                 Load.loadUnit: loadedProjectsRaw took 304.8688ms
[debug]                 Load.loadUnit: cleanEvalClasses took 9.5571ms
[debug]               Load.loadUnit(file:/C:/DevProjects/Scala/moscow-fintech-project/project/project/, ...) took 401.6072ms
[debug]             Load.apply: load took 512.3075ms
[debug]             Load.apply: resolveProjects took 4.5633ms
[debug]             Load.apply: finalTransforms took 47.628ms
[debug]             Load.apply: config.delegates took 6.5611ms
[debug]             Load.apply: Def.make(settings)... took 512.3083ms
[debug]             Load.apply: structureIndex took 132.0169ms
[debug]             Load.apply: mkStreams took 4.9713ms
[info] loading project definition from C:\DevProjects\Scala\moscow-fintech-project\project\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]           Load.loadUnit: plugins took 2128.5103ms
[debug]           Load.loadUnit: defsScala took 0.0053ms
[debug] [Loading] Scanning directory C:\DevProjects\Scala\moscow-fintech-project\project
[debug]             Load.loadUnit: mkEval took 0.3348ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\DevProjects\Scala\moscow-fintech-project\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(bloop.integrations.sbt.BloopPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(bloop.integrations.sbt.BloopPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,bloop.integrations.sbt.BloopPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.1023 ms
[info] loading settings for project moscow-fintech-project-build from metals.sbt, idea.sbt...
[debug]               Load.resolveProject(moscow-fintech-project-build) took 18.9399ms
[debug]             Load.loadTransitive: finalizeProject(Project(id moscow-fintech-project-build, base: C:\DevProjects\Scala\moscow-fintech-project\project, plugins: List(<none>))) took 21.6414ms
[debug] [Loading] Done in C:\DevProjects\Scala\moscow-fintech-project\project, returning: (moscow-fintech-project-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 2488.6166ms
[debug]           Load.loadUnit: cleanEvalClasses took 6.1231ms
[debug]         Load.loadUnit(file:/C:/DevProjects/Scala/moscow-fintech-project/project/, ...) took 4624.3319ms
[debug]       Load.apply: load took 4626.4748ms
[debug]       Load.apply: resolveProjects took 0.1075ms
[debug]       Load.apply: finalTransforms took 13.2989ms
[debug]       Load.apply: config.delegates took 0.4992ms
[debug]       Load.apply: Def.make(settings)... took 67.214ms
[debug]       Load.apply: structureIndex took 25.4452ms
[debug]       Load.apply: mkStreams took 0.0026ms
[info] loading project definition from C:\DevProjects\Scala\moscow-fintech-project\project
[debug] Evaluating tasks: bloopInstall
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Canceling execution...
[error] Cancelled: loadp
[error] Cancelled: loadp
[error] Use 'last' for the full log.
[debug] > Exec(loadFailed, None, None)
[warn] Project loading failed: (r)etry, (q)uit, (l)ast, or (i)gnore? (default: r)
